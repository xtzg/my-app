import{R as e,r as t,j as n}from"./index.Ct1nB1AN.js";import{S as r,W as o,R as a,C as i,G as s,P as c,M as l,T as m,L as u,b as d,D as v,c as p,F as f,V as g,d as h,e as x,f as w,O as S}from"./vendor.zHxWR97D.js";const M=["#ffffff","#ffffff","#ffffff"],y=e=>{3===(e=e.replace(/^#/,"")).length&&(e=e.split("").map((e=>e+e)).join(""));const t=parseInt(e,16);return[(t>>16&255)/255,(t>>8&255)/255,(255&t)/255]},z=e.memo((({grid:e=40,distortionStrength:z=.1,relaxation:R=.9,imageSrc:C,particleCount:P=400,particleSpread:F=10,particleSpeed:T=.1,particleColors:X=M,particleBaseSize:Y=100,sizeRandomness:E=1,cameraDistance:j=20,disableRotation:D=!1,mouseForce:b=1.5,mouseRadius:A=.2,particleMouseForce:B=.5,className:L=""})=>{const _=t.useRef(null),N=t.useRef({x:0,y:0,prevX:0,prevY:0,vX:0,vY:0,targetX:0,targetY:0,lerpFactor:.1}),U=t.useRef(1),q=t.useRef({renderer:null,mesh:null});return t.useEffect((()=>{if(!_.current)return;const t=_.current,n=t.querySelector(".distortion-layer"),M=t.querySelector(".particles-layer"),L=new r,W=new o({antialias:!0,alpha:!0,powerPreference:"high-performance"});W.setPixelRatio(Math.min(window.devicePixelRatio,2)),n.appendChild(W.domElement);const G=new a({depth:!1,alpha:!0,powerPreference:"high-performance"}),I=G.gl;M.appendChild(I.canvas),I.clearColor(0,0,0,0);const O=new i(I,{fov:15});O.position.set(0,0,j);const V=P,k=new Float32Array(3*V),H=new Float32Array(4*V),$=new Float32Array(3*V);for(let e=0;e<V;e++){let t,n,r,o;do{t=2*Math.random()-1,n=2*Math.random()-1,r=2*Math.random()-1,o=t*t+n*n+r*r}while(o>1||0===o);const a=Math.cbrt(Math.random());k.set([t*a,n*a,r*a],3*e),H.set([Math.random(),Math.random(),Math.random(),Math.random()],4*e);const i=y(X[Math.floor(Math.random()*X.length)]);$.set(i,3*e)}const J=new s(I,{position:{size:3,data:k},random:{size:4,data:H},color:{size:3,data:$}}),K=new c(I,{vertex:"\n  attribute vec3 position;\n  attribute vec4 random;\n  attribute vec3 color;\n  \n  uniform mat4 modelMatrix;\n  uniform mat4 viewMatrix;\n  uniform mat4 projectionMatrix;\n  uniform float uTime;\n  uniform float uSpread;\n  uniform float uBaseSize;\n  uniform float uSizeRandomness;\n  \n  varying vec4 vRandom;\n  varying vec3 vColor;\n  \n  void main() {\n    vRandom = random;\n    vColor = color;\n    \n    vec3 pos = position * uSpread;\n    pos.z *= 10.0;\n    \n    vec4 mPos = modelMatrix * vec4(pos, 1.0);\n    float t = uTime;\n    mPos.x += sin(t * random.z + 6.28 * random.w) * mix(0.1, 1.5, random.x);\n    mPos.y += sin(t * random.y + 6.28 * random.x) * mix(0.1, 1.5, random.w);\n    mPos.z += sin(t * random.w + 6.28 * random.y) * mix(0.1, 1.5, random.z);\n    \n    vec4 mvPos = viewMatrix * mPos;\n    gl_PointSize = (uBaseSize * (1.0 + uSizeRandomness * (random.x - 0.5))) / length(mvPos.xyz);\n    gl_Position = projectionMatrix * mvPos;\n  }\n",fragment:"\n  precision highp float;\n  \n  uniform float uTime;\n  varying vec4 vRandom;\n  varying vec3 vColor;\n  \n  void main() {\n    vec2 uv = gl_PointCoord.xy;\n    float d = length(uv - vec2(0.5));\n    float circle = smoothstep(0.5, 0.4, d) * 0.8;\n    gl_FragColor = vec4(vColor + 0.2 * sin(uv.yxx + uTime + vRandom.y * 6.28), circle);\n  }\n",uniforms:{uTime:{value:0},uSpread:{value:F},uBaseSize:{value:Y},uSizeRandomness:{value:E}},transparent:!0,depthTest:!1}),Q=new l(I,{mode:I.POINTS,geometry:J,program:K});q.current={renderer:G,mesh:Q};(new m).load(C,(e=>{e.minFilter=u,U.current=e.image.width/e.image.height,re.uniforms.uTexture.value=e,se()}));const Z=e,ee=new Float32Array(4*Z*Z);for(let e=0;e<Z*Z;e++)ee[4*e]=255*Math.random()-125,ee[4*e+1]=255*Math.random()-125;const te=new v(ee,Z,Z,p,f);te.needsUpdate=!0;const ne={time:{value:0},resolution:{value:new g},uTexture:{value:null},uDataTexture:{value:te}},re=new d({side:h,uniforms:ne,vertexShader:"\nuniform float time;\nvarying vec2 vUv;\nvarying vec3 vPosition;\n\nvoid main() {\n  vUv = uv;\n  vPosition = position;\n  gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\n}\n",fragmentShader:"\nuniform sampler2D uDataTexture;\nuniform sampler2D uTexture;\nuniform vec4 resolution;\nvarying vec2 vUv;\n\nvoid main() {\n  vec2 uv = vUv;\n  vec4 offset = texture2D(uDataTexture, vUv);\n  gl_FragColor = texture2D(uTexture, uv - 0.02 * offset.rg);\n}\n"}),oe=new x(1,1,Z-1,Z-1),ae=new w(oe,re);L.add(ae);const ie=new S(0,0,0,0,-1e3,1e3);ie.position.z=2;const se=()=>{const e=t.offsetWidth,n=t.offsetHeight,r=e/n,o=U.current;W.setSize(e,n),G.setSize(e,n);const a=Math.max(r/o,1);ae.scale.set(o*a,a,1);const i=1*r;ie.left=-i/2,ie.right=i/2,ie.top=.5,ie.bottom=-.5,ie.updateProjectionMatrix(),O.perspective({aspect:e/n}),ne.resolution.value.set(e,n,1,1)},ce=e=>{const n=t.getBoundingClientRect(),r=(e.clientX-n.left)/n.width,o=1-(e.clientY-n.top)/n.height;N.current.vX=(r-N.current.prevX)*b,N.current.vY=(o-N.current.prevY)*b,N.current.targetX=2*(r-.5),N.current.targetY=2*(o-.5),N.current={...N.current,x:r,y:o,prevX:r,prevY:o}},le=()=>{N.current={...N.current,x:.5,y:.5,prevX:.5,prevY:.5,vX:0,vY:0,targetX:0,targetY:0}};let me,ue=performance.now(),de=0;const ve=e=>{const t=e-ue;ue=e,de+=t*T,me=requestAnimationFrame(ve),ne.time.value+=.05;const n=te.image.data;for(let i=0;i<Z*Z;i++){const e=4*i;n[e]*=R,n[e+1]*=R}const r=Z*N.current.x,o=Z*N.current.y,a=Z*A;for(let i=0;i<Z;i++)for(let e=0;e<Z;e++){const t=Math.pow(r-i,2)+Math.pow(o-e,2);if(t<a*a){const r=4*(i+Z*e),o=Math.min(a/Math.sqrt(t),10);n[r]+=100*z*N.current.vX*o,n[r+1]-=100*z*N.current.vY*o}}K.uniforms.uTime.value=.001*de,Q&&(Q.position.x+=(N.current.targetX*B-Q.position.x)*N.current.lerpFactor,Q.position.y+=(N.current.targetY*B-Q.position.y)*N.current.lerpFactor,D||(Q.rotation.x=.1*Math.sin(2e-4*de),Q.rotation.y=.15*Math.cos(5e-4*de),Q.rotation.z+=.01*T)),te.needsUpdate=!0,W.render(L,ie),G.render({scene:Q,camera:O})};return me=requestAnimationFrame(ve),window.addEventListener("resize",se),t.addEventListener("mousemove",ce),t.addEventListener("mouseleave",le),se(),()=>{var e;window.removeEventListener("resize",se),t.removeEventListener("mousemove",ce),t.removeEventListener("mouseleave",le),cancelAnimationFrame(me),W.dispose(),oe.dispose(),re.dispose(),te.dispose(),ne.uTexture.value&&ne.uTexture.value.dispose(),n.contains(W.domElement)&&n.removeChild(W.domElement),M.contains(I.canvas)&&M.removeChild(I.canvas),null==(e=G.gl.getExtension("WEBGL_lose_context"))||e.loseContext()}}),[e,z,R,C,P,F,T,X,Y,E,j,D,b,A,B]),n.jsxs("div",{ref:_,className:`background-effect ${L}`,style:{touchAction:"none"},children:[n.jsx("div",{className:"distortion-layer"}),n.jsx("div",{className:"particles-layer"})]})}),((e,t)=>{var n,r;return e.grid===t.grid&&e.distortionStrength===t.distortionStrength&&e.relaxation===t.relaxation&&e.imageSrc===t.imageSrc&&e.particleCount===t.particleCount&&e.particleSpread===t.particleSpread&&e.particleSpeed===t.particleSpeed&&(null==(n=e.particleColors)?void 0:n.toString())===(null==(r=t.particleColors)?void 0:r.toString())&&e.particleBaseSize===t.particleBaseSize&&e.sizeRandomness===t.sizeRandomness&&e.cameraDistance===t.cameraDistance&&e.disableRotation===t.disableRotation&&e.mouseForce===t.mouseForce&&e.mouseRadius===t.mouseRadius&&e.particleMouseForce===t.particleMouseForce&&e.className===t.className}));export{z as default};
